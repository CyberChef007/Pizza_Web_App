[{"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\index.js":"1","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\store.js":"2","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\App.js":"3","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\userReducer.js":"4","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\cartReducer.js":"5","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\pizzaReducer.js":"6","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\orderReducer.js":"7","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\TopBar.jsx":"8","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\NavBar.jsx":"9","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\About.jsx":"10","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Contact.jsx":"11","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\CartScreen.jsx":"12","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\OrderScreen.jsx":"13","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Policy.jsx":"14","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\Register.jsx":"15","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\HomeScreen.jsx":"16","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\Login.jsx":"17","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Error.jsx":"18","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Success.jsx":"19","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Loader.jsx":"20","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\userAction.js":"21","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\pizzaAction.js":"22","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\cartAction.js":"23","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\orderAction.js":"24","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Checkout.jsx":"25","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Pizza.jsx":"26"},{"size":330,"mtime":1637511740910,"results":"27","hashOfConfig":"28"},{"size":1319,"mtime":1637577430267,"results":"29","hashOfConfig":"28"},{"size":1202,"mtime":1637586450368,"results":"30","hashOfConfig":"28"},{"size":1034,"mtime":1637561544136,"results":"31","hashOfConfig":"28"},{"size":824,"mtime":1637527249410,"results":"32","hashOfConfig":"28"},{"size":562,"mtime":1637514780452,"results":"33","hashOfConfig":"28"},{"size":1097,"mtime":1637590794136,"results":"34","hashOfConfig":"28"},{"size":1412,"mtime":1636465957656,"results":"35","hashOfConfig":"28"},{"size":2478,"mtime":1683833254256,"results":"36","hashOfConfig":"28"},{"size":5651,"mtime":1636466508605,"results":"37","hashOfConfig":"28"},{"size":3235,"mtime":1636467361589,"results":"38","hashOfConfig":"28"},{"size":2760,"mtime":1637563467374,"results":"39","hashOfConfig":"28"},{"size":2930,"mtime":1637598901666,"results":"40","hashOfConfig":"28"},{"size":4987,"mtime":1636467601898,"results":"41","hashOfConfig":"28"},{"size":3470,"mtime":1637561888767,"results":"42","hashOfConfig":"28"},{"size":1175,"mtime":1637582274572,"results":"43","hashOfConfig":"28"},{"size":2051,"mtime":1637562248735,"results":"44","hashOfConfig":"28"},{"size":263,"mtime":1637561276154,"results":"45","hashOfConfig":"28"},{"size":274,"mtime":1637561272523,"results":"46","hashOfConfig":"28"},{"size":181,"mtime":1637561201060,"results":"47","hashOfConfig":"28"},{"size":972,"mtime":1637559870056,"results":"48","hashOfConfig":"28"},{"size":385,"mtime":1637514490406,"results":"49","hashOfConfig":"28"},{"size":971,"mtime":1637528352224,"results":"50","hashOfConfig":"28"},{"size":1042,"mtime":1637598441007,"results":"51","hashOfConfig":"28"},{"size":1209,"mtime":1683833454507,"results":"52","hashOfConfig":"28"},{"size":3145,"mtime":1637521896716,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1lxmx5g",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\index.js",[],["114","115"],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\store.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\App.js",["116","117"],"import \"./App.css\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport TopBar from \"./components/TopBar\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Policy from \"./components/Policy\";\nimport NavBar from \"./components/NavBar\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport Register from \"./screens/Register\";\nimport Login from \"./screens/Login\";\nimport OrderScreen from \"./screens/OrderScreen\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <TopBar />\n      <NavBar />\n      <Switch>\n      <Route path=\"/orders\" component={OrderScreen} exact />\n        <Route path=\"/login\" component={Login} exact />\n        <Route path=\"/register\" component={Register} exact />\n        <Route path=\"/cart\" component={CartScreen} exact />\n        <Route path=\"/about\" component={About} exact />\n        <Route path=\"/contact\" component={Contact} exact />\n        <Route path=\"/policy\" component={Policy} exact />\n        <Route path=\"/\" component={HomeScreen} exact />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\userReducer.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\cartReducer.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\pizzaReducer.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\reducers\\orderReducer.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\TopBar.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\NavBar.jsx",["118"],"import React from 'react'\r\nimport { Navbar, Nav, Container, Image, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {logoutUser} from '../actions/userAction'\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const cartState = useSelector((state) => state.cartReducer)\r\n    const userState = useSelector((state) => state.loginUserReducer)\r\n    const { currentUser } = userState\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\r\n                <Container>\r\n                    <Navbar.Brand>\r\n                        <img src=\"images/logo.jpeg\" alt=\"logo\"></img>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ms-auto\">\r\n                            {\r\n                                currentUser ? (<LinkContainer to=\"/\">\r\n                                    <NavDropdown title={currentUser.name} id=\"basic-nav-dropdown\">\r\n                                    <LinkContainer to=\"/orders\">\r\n                                    <NavDropdown.Item> \r\n                                        orders \r\n                                    </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                        \r\n                                        <NavDropdown.Item onClick={() => {dispatch(logoutUser())}}>LogOut</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                </LinkContainer>) : (<> {\" \"}<LinkContainer to=\"/login\">\r\n                                    <Nav.Link >Login</Nav.Link>\r\n                                </LinkContainer>\r\n                                    <LinkContainer to=\"/register\">\r\n                                        <Nav.Link >Register</Nav.Link>\r\n                                    </LinkContainer> {\" \"} </>)\r\n                            }\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link >Cart {cartState.cartItems.length}</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\About.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Contact.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\CartScreen.jsx",["119"],"import React from 'react'\r\nimport {Container,Row,Col, Button} from 'react-bootstrap'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {FaMinusCircle,FaPlusCircle,FaTrash} from 'react-icons/fa'\r\nimport { addToCart,deleteFromCart } from '../actions/cartAction'\r\nimport Checkout from '../components/Checkout'\r\nconst CartScreen = () => {\r\n    const cartState = useSelector(state => state.cartReducer)\r\n    const cartItems = cartState.cartItems\r\n    const dispatch = useDispatch()\r\n    const subTotal = cartItems.reduce((x,item) => x + item.price,0)\r\n    return (\r\n        <>\r\n          <Container>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h1>Card Items</h1>\r\n                    <Row>\r\n                        {\r\n                            cartItems.map(items => (\r\n                                <>\r\n                                <Col md={7}>\r\n                                    <h5>{items.name} [{items.varient}]</h5>\r\n                                    <h6>{\" \"}Price : {items.quantity} x {items.prices[0][items.varient]} = {\" \"} {items.price} </h6>\r\n                                    <h6>Quantity : &nbsp; \r\n                                    <FaMinusCircle className=\"text-danger\"\r\n                                    style={{cursor:\"pointer\"}}\r\n                                    onClick={() => {dispatch(addToCart(items,items.quantity - 1,items.varient));}}/> &nbsp; \r\n                                    {items.quantity} &nbsp; \r\n                                    <FaPlusCircle className=\"text-success\"\r\n                                    style={{cursor:\"pointer\"}}\r\n                                    onClick={() => {dispatch(addToCart(items,items.quantity + 1,items.varient));}}/></h6>\r\n                                </Col>\r\n                                <Col md={5}>\r\n                                    <img alt={items.name} src={items.image} style={{width:'80px',height:'80px'}}/>\r\n                                    <FaTrash className=\"text-danger\"\r\n                                    style={{cursor:\"pointer\" ,marginLeft: \"20px\"}}\r\n                                    onClick={() => {dispatch(deleteFromCart(items));}}/>\r\n                                </Col>\r\n                                <hr/>\r\n                                </>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <h1>Payment Info</h1>\r\n                    <h4>Sub total</h4>\r\n                    <h4>Rs : {subTotal} /-</h4>\r\n                    <Checkout subTotal={subTotal}/>\r\n                </Col>\r\n            </Row>  \r\n          </Container> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\OrderScreen.jsx",["120","121","122","123"],"import React, { useEffect, useState } from 'react'\r\nimport { getUserOrders } from '../actions/orderAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Error from '../components/Error'\r\nconst OrderScreen = () => {\r\n    const orderState = useSelector(state => state.getUserOrdersReducer)\r\n    const { loading, error, orders } = orderState\r\n    console.log(\"orders\", orders)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getUserOrders())\r\n    }, [dispatch]);\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading && (<Loader />)}\r\n            {error && (<Error error=\"Something Went Wrong\" />)}\r\n            <div className=''>\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Amount</th>\r\n                            <th scope=\"col\">city</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders && orders.map((order, idx) => {\r\n                            return (\r\n                                <tr>\r\n                                    <th scope=\"row\">{order.name}</th>\r\n                                    <td>{order.email}</td>\r\n                                    <td>{order.orderAmount}</td>\r\n                                    <td>{order.shippingAddress.city}</td>\r\n                                    <td>{order.orderItems.map((item) => {\r\n                                            <div>\r\n                                                <h6>{item.name} [{item.varient}] * {item.quantity} = {\" \"} {item.price}</h6>\r\n                                            </div>\r\n                                        })}</td>\r\n                                </tr>\r\n                                // <Row key={idx}>\r\n                                //     <Col md={4}>\r\n                                //         {order.orderItems.map((item) => {\r\n                                //             <div>\r\n                                //                 <h6 key={item.name}>{item.name} [{item.varient}] * {item.quantity} = {\" \"} {item.price}</h6>\r\n                                //             </div>\r\n                                //         })}\r\n                                //     </Col>\r\n                                //     <Col md={4}>\r\n                                //     </Col>\r\n                                //     <Col md={4}></Col>\r\n                                // </Row>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n\r\n\r\n","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Policy.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\Register.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\screens\\Login.jsx",["124"],"import React,{useState,useEffect} from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {loginUser} from '../actions/userAction'\r\nconst Login = () => {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(localStorage.getItem('currentUser')){\r\n            window.location.href = '/'\r\n        }\r\n    },[])\r\n    \r\n    const loginHandler = () => {\r\n        const user = {email,password}\r\n        dispatch(loginUser(user))\r\n    }\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} placeholder=\"Enter email\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" \r\n                    onClick={loginHandler}>\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Error.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Success.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Loader.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\userAction.js",["125"],"import axios from 'axios'\r\nexport const registerUser = (user) => async dispatch => {\r\n    dispatch({type:'USER_REGISTER_REQUEST'})\r\n    try {\r\n        const res = await axios.post('/api/users/register', user)\r\n        dispatch({type:'USER_REGISTER_SUCCESS'})\r\n    } catch (error) {\r\n        dispatch({type:'USER_REGISTER_FAIL', payload:error})\r\n    }\r\n}\r\n\r\nexport const loginUser = (user) => async dispatch => {\r\n    dispatch({type:'USER_LOGIN_REQUEST'})\r\n    try {\r\n        const response = await axios.post('/api/users/login',user)\r\n        console.log(response)\r\n        dispatch({type:'USER_LOGIN_SUCCESS', payload:response.data})\r\n        localStorage.setItem('currentUser', JSON.stringify(response.data))\r\n        window.location.href = '/'\r\n    } catch (error) {\r\n        dispatch({type:'USER_LOGIN_FAIL', paylaod: error})\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem('currentUser')\r\n    window.location.href = '/login'\r\n}","C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\pizzaAction.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\cartAction.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\actions\\orderAction.js",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Checkout.jsx",[],"C:\\Users\\Shivam\\Desktop\\Projects\\pizza\\Client\\src\\components\\Pizza.jsx",["126","127"],"import React, { useState } from 'react'\r\nimport { Card, Button, Row, Col, Modal} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { addToCart } from '../actions/cartAction'\r\nconst Pizza = ({ pizza }) => {\r\n    const [varient, setVarient] = useState('small')\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [show, setShow] = useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(pizza,quantity,varient))\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Card style={{ width: '18rem', marginTop: \"30px\" }}>\r\n                <Card.Img variant=\"top\" src={pizza.image} style={{ height: \"200px\", cursor: \"pointer\" }}  onClick={handleShow}/>\r\n                <Card.Body>\r\n                    <Card.Title>{pizza.name}</Card.Title>\r\n                    <hr />\r\n                    <Card.Text>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h6>Varients</h6>\r\n                                <select value={varient} onChange={e => setVarient(e.target.value)}>\r\n                                    {pizza.varients.map(varient => (\r\n                                        <option>{varient}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                <h6>Quantity</h6>\r\n                                <select value={quantity} onChange={e => setQuantity(e.target.value)}>\r\n                                    {[...Array(10).keys()].map((v, i) => (\r\n                                        <option value={i + 1}>{i + 1}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Text>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            Price : &#8377; {pizza.prices[0][varient] * quantity}\r\n                        </Col>\r\n                        <Col md={5}>\r\n                            <button \r\n                            onClick={addToCartHandler}\r\n                            className=\"bg-warning text-white\">AddToCart</button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{pizza.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                    <Card.Img variant=\"top\" src={pizza.image} style={{ height: \"200px\"}} />\r\n                    </div>\r\n                    <div>\r\n                        <h5>Description :</h5>\r\n                        <h6>{pizza.description}</h6>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pizza\r\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":19},{"ruleId":"132","severity":1,"message":"136","line":2,"column":21,"nodeType":"134","messageId":"135","endLine":2,"endColumn":27},{"ruleId":"132","severity":1,"message":"137","line":2,"column":34,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"132","severity":1,"message":"138","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":34},{"ruleId":"132","severity":1,"message":"139","line":1,"column":28,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"140","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"132","severity":1,"message":"141","line":4,"column":15,"nodeType":"134","messageId":"135","endLine":4,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":38,"column":70,"nodeType":"144","messageId":"145","endLine":38,"endColumn":72},{"ruleId":"132","severity":1,"message":"146","line":3,"column":21,"nodeType":"134","messageId":"135","endLine":3,"endColumn":32},{"ruleId":"132","severity":1,"message":"147","line":5,"column":15,"nodeType":"134","messageId":"135","endLine":5,"endColumn":18},{"ruleId":"132","severity":1,"message":"138","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"146","line":3,"column":21,"nodeType":"134","messageId":"135","endLine":3,"endColumn":32},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useSelector' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]