{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzaReducer } from './reducers/pizzaReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { registerUserReducer } from './reducers/userReducer';\nimport { loginUserReducer } from './reducers/userReducer';\nimport { placeOrderReducer } from './reducers/orderReducer';\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer\n});\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null; // const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) :[]\n\nconst initialState = {\n  // cartReducer : {\n  //     cartItems : cartItems,\n  // },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Shivam/Desktop/pizzeria/Client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","cartReducer","registerUserReducer","loginUserReducer","placeOrderReducer","rootReducer","currentUser","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,QAAiC,yBAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,iBAAT,QAAiC,yBAAjC;AACA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCI,EAAAA,kBAAkB,EAACA,kBADa;AAEhCC,EAAAA,WAAW,EAACA,WAFoB;AAGhCC,EAAAA,mBAAmB,EAACA,mBAHY;AAIhCC,EAAAA,gBAAgB,EAACA,gBAJe;AAKhCC,EAAAA,iBAAiB,EAACA;AALc,CAAD,CAAnC;AAOA,MAAME,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IAAsCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAtC,GAAwF,IAA5G,C,CACA;;AAEA,MAAMG,YAAY,GAAG;AACjB;AACA;AACA;AACAR,EAAAA,gBAAgB,EAAG;AACfG,IAAAA,WAAW,EAAGA;AADC;AAJF,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CAACU,WAAD,EAAaM,YAAb,EAA0BZ,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CAA7C,CAAzB;AACA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {getAllPizzaReducer} from './reducers/pizzaReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { registerUserReducer } from './reducers/userReducer'\r\nimport { loginUserReducer } from './reducers/userReducer'\r\nimport { placeOrderReducer } from'./reducers/orderReducer'\r\nconst rootReducer = combineReducers({\r\n    getAllPizzaReducer:getAllPizzaReducer,\r\n    cartReducer:cartReducer,\r\n    registerUserReducer:registerUserReducer,\r\n    loginUserReducer:loginUserReducer,\r\n    placeOrderReducer:placeOrderReducer,\r\n})\r\nconst currentUser = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')) : null\r\n// const cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) :[]\r\n\r\nconst initialState = {\r\n    // cartReducer : {\r\n    //     cartItems : cartItems,\r\n    // },\r\n    loginUserReducer : {\r\n        currentUser : currentUser\r\n    }\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\nexport default store;"]},"metadata":{},"sourceType":"module"}