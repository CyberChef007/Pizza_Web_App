{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getAllPizzaReducer } from './reducers/pizzaReducer';\nimport { cartReducer } from './reducers/cartReducer';\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItem')) : [];\nconst rootReducer = combineReducers({\n  getAllPizzaReducer: getAllPizzaReducer,\n  cartReducer: cartReducer\n});\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Shivam/Desktop/pizzeria/Client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","getAllPizzaReducer","cartReducer","cartItems","localStorage","getItem","JSON","parse","rootReducer","initialState","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,QAAiC,yBAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAApC,GAAmF,EAArG;AACA,MAAMG,WAAW,GAAGX,eAAe,CAAC;AAChCI,EAAAA,kBAAkB,EAACA,kBADa;AAEhCC,EAAAA,WAAW,EAACA;AAFoB,CAAD,CAAnC;AAMA,MAAMO,YAAY,GAAG;AACjBP,EAAAA,WAAW,EAAG;AACVC,IAAAA,SAAS,EAAGA;AADF;AADG,CAArB;AAKA,MAAMO,UAAU,GAAG,CAACX,KAAD,CAAnB;AAEA,MAAMY,KAAK,GAAGf,WAAW,CAACY,WAAD,EAAaC,YAAb,EAA0BT,mBAAmB,CAACF,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAA7C,CAAzB;AACA,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {getAllPizzaReducer} from './reducers/pizzaReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nconst cartItems = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItem')) : []\r\nconst rootReducer = combineReducers({\r\n    getAllPizzaReducer:getAllPizzaReducer,\r\n    cartReducer:cartReducer,\r\n})\r\n\r\n\r\nconst initialState = {\r\n    cartReducer : {\r\n        cartItems : cartItems,\r\n    },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\nexport default store;"]},"metadata":{},"sourceType":"module"}